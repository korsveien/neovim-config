snippet mod "module x"
module $1 (..) where
endsnippet

snippet modm "module Main"
module Main (..) where
endsnippet

snippet ime "import <module> exposing (..)"
import $1 exposing ($2)
endsnippet

snippet im "import <module>"
import $1 exposing ($2)
endsnippet

snippet iattr "import Html.Attributes..."
import Html.Attributes exposing (class, style)
endsnippet

snippet v "<view> : Signal.Address Action -> AppModel -> Html.Html"
$1 : Signal.Address Action -> AppModel -> Html.Html
$1 $2 =
$3
endsnippet

snippet a "type Action = ..."
type Action =
NoOp
| $1
endsnippet

snippet m "type alias Model ..."
type alias Model =
$1
endsnippet

snippet fn "foo : Int -> Int..."
$1 : $2
$1 =
$3
endsnippet

snippet port "port foo : Task.Task..."
port $1 : $2
port $1 =
$3
endsnippet

snippet adr "Signal.Address"
Signal.Address
endsnippet

snippet eff "import Effects..."
import Effects exposing (..)
endsnippet

